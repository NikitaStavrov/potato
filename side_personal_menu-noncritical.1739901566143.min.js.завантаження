$(document).ready(function () {
    /* Currency exchage */
 // Change operation
    $('aside.customer-care ul.cc-content li .cc-body .exchange-switch .exchange-switch-button').bind('click', function() {
	 	// Switch active element
    	currencyOperationChange($(this));
    })
    .bind('keydown', function(e){
    	if (e.keyCode == 13) {
    		currencyOperationChange($(this));
    		e.preventDefault();
    	}    	
    });
    
    function currencyOperationChange($button){
    	$button.siblings('.active').removeClass('active');
    	$button.addClass('active');
	 	
		$('#exchange-switch-text').html($button.data("text").replace("[PARAM1]", $('input#exchange_currency').val().toUpperCase()));
	 	
	 	$("#exchange_conversiontype").val($button.data('operation'));
	 	
	 	calculateExchange();
    }
 
 //Select whole text
    $('aside.customer-care ul.cc-content li .cc-body .exchange-inputs .exchange-input input').bind('focus', function() {
    	$(this).select();
    });

 // Change value
    if(typeof calculateExchange != 'undefined'){
    	$('aside.customer-care ul.cc-content li .cc-body .exchange-inputs .exchange-input input').bind('keyup', calculateExchange);
    }

});

$('aside.customer-care ul.cc-content li .cc-body .exchange-inputs .exchange-input input').on('input', function(){
	let inputVal = $(this).val().trim();
	let errorField = $('aside.customer-care ul.cc-content li .cc-body .exchange-inputs .exchange-input div.error');
	let regex = /^\d+([.,]\d+)?$/
	if(inputVal === "" || regex.test(inputVal)){
		$(this).removeClass("error");
		errorField.hide();
	} else {
		$(this).addClass("error");
		errorField.show();
	}
});



var firstpage_height = 0;
var breakpoint2 = '';
var header_gimb_full = 145;
const isAsideDocked = $(window).height() < 600;

function isBreakpointChanged2() {

    if($(window).height() < 600 && breakpoint2 != 'xs') {
        breakpoint2 = 'xs';
        return true;
    } else if ($('.device-xs').is(':visible') && breakpoint2 != 'xs') {
        breakpoint2 = 'xs';
        return true;
    } else if ($('.device-sm').is(':visible') && breakpoint2 != 'sm') {
        breakpoint2 = 'sm';
        return true;
    } else if ($('.device-md').is(':visible') && breakpoint2 != 'md') {
        breakpoint2 = 'md';
        return true;
    } else if ($('.device-lg').is(':visible') && breakpoint2 != 'lg') {
        breakpoint2 = 'lg';
        return true;
    }

    return false;
}

$(document).ready(function() {
    if (typeof isIBLoginCustom === 'undefined') {
        $('aside.customer-care').css('display', 'block');
    }
    adjustSideMenuHeight();
    currentScroll = $(window).scrollTop();
    lastScroll = $(window).scrollTop();
    firstpage_height = $('.front_page_container').outerHeight() - $('.header-navigation').outerHeight();
    resetUnicredit();
    initCC();
    ccAutoDocking();
    ccVerticalCentering();
    ccFixSmartBanner();
    displayCC();
    inertAsideMenu();
});

$(window).on("resize", function() {

    if($(window).height() < 600) {
        $('aside.customer-care').removeClass('floating').addClass('mobile');
    }else if($('aside.customer-care').hasClass('mobile') && $(window).width() >= 600) {
        $('aside.customer-care').removeClass('mobile').addClass('floating');
    }
    if(!isTouchUI) {

        adjustSideMenuHeight();
        currentScroll = $(window).scrollTop();
        firstpage_height = $('.front_page_container').outerHeight() - $('.header-navigation').outerHeight();
        resetUnicredit();
        ccAutoDocking();
        ccVerticalCentering();
        ccFixSmartBanner();
    }

});

$(window).scroll(function() {
    firstpage_height = $('.front_page_container').outerHeight() - $('.header-navigation').outerHeight();
    dockCC();
    lastScroll = currentScroll;
    ccFixSmartBanner();
});

function ccFixSmartBanner(closed) {
    if (getSmartbannerHeight() > 0 || closed) {
        $('.cc-mobile:not(.cc-homepage)').css(
                'top',
                $('header.header-navigation').height()
                        + getSmartbannerHeight()
                        - ($(window).scrollTop() < getSmartbannerHeight() ? $(
                                window).scrollTop() : getSmartbannerHeight()));
    }
}

function ccVerticalCentering() {
    var taller = 0;
    $('aside.customer-care ul.cc-content li .cc-body').each(function(i, cc) {
        if ($(cc).height() > taller) {
            taller = $(cc).outerHeight();
        }
    });
    var frontPageContainerHeight = $(window).height() - 144;

    var second_level_height = $('.header-second-level').length > 0 ? $(
            '.header-second-level').height() : 0;
    var top_campaign = $('header.front_page_container').length == 0 ? 800 : frontPageContainerHeight
            + $('.header-navigation').height() + getSmartbannerHeight();
    // <-- min: the height of the header with the second level navigation, if exist, and 5px of margin
    var min = header_gimb_full + second_level_height + 5;

    // max:the vertical centering of the floating tools relative to the first campaign
    var max = Math.floor((top_campaign - $('aside.customer-care').height()) / 2);

    // diff: the difference between the height of the page and the taller customer care content. with 10px of margin
    var diff = Math.abs(Math.min($(window).height() - max - taller - 10, 0));

    // top: the top for the aside menu, diff pixels before the vertical centering but never before the header
    var top = Math.max(min, max - diff);

    $('aside.customer-care').css('top', top + 'px');
    
}

// Auto docking
function ccAutoDocking() {
    if ((breakpoint2 == 'xs') && (($(window).height() < 600 && $(window).width() > 959) || ($(window).height() < 520 && $(window).width() < 959))) {
        $('.cc-mobile').addClass('auto-docking docked fixed');
    } else {
        if ($('.cc-mobile').hasClass('auto-docking')) {
            $('.cc-mobile').removeClass('auto-docking');

            dockCC();
        }
    }
}

// Reset on resize
function resetUnicredit() {
    if (!isBreakpointChanged2()) {
        return;
    }

    if($(window).height() >= 600) {
        // Close customer care
        $('aside.customer-care').removeClass('mobile opened').addClass('floating');
        $('aside.customer-care ul li.active').removeClass('active');
    }

    // Specific reset
    if (breakpoint2 == 'xs') {

        // Customer care as aside menu
        $('aside.customer-care').css('transition', 'none');
        $('aside.customer-care').removeClass('floating').addClass('mobile');
        setTimeout(function() {
            $('aside.customer-care').css('transition', '');
        }, 800);
        
        startRotateCC();
        dockCC();
    } else {
        stopRotateCC();
    }
}

// Init the customer care
function initCC() {
    // Copy the customer care into the placeholder for mobile mode
    $('.cc-mobile').eq(0).append($('aside.customer-care ul.cc-icons').clone());

    var sidemenuItemsNo = $('aside.customer-care ul.cc-icons li').length;
    if (sidemenuItemsNo == 5) {
        $('.cc-mobile').addClass("extended");
        $('.customer-care.mobile').addClass("extended");
    }

//    if (!$('.cc-mobile').hasClass('cc-homepage')) {
//        setTimeout(startRotateCC, 500);
//    }

    $('.cc-mobile ul.cc-icons li a').bind('click', function(e) {
        e.preventDefault();
        $(this).blur();

        openCC($(this).parent('li').data('id'));
        //remove aside inert when icon is pressed
        $('aside.customer-care').removeAttr("inert");
    });

    // for landing pages add the mobile white logo
    if ($('body').hasClass('sm_alt_landingpage')) {
        var defaultLogoWhitePath = "/etc/designs/cee2020-pws/img/side_menu/unicredit-logo-white.svg";
        $('aside.customer-care div.header').append(
                '<img src="' + defaultLogoWhitePath
                        + '" alt="UniCredit Logo" class="logo">');
    }
}

var focusTimeout = 500;
$('aside.customer-care ul.cc-content li .close-sidemenu').on('click', function(e) {
    //$('aside.customer-care ul.cc-icons li.active > a').click();
    if(isMobile || isAsideDocked) $("aside.customer-care a.close-menu").click();
    closeActiveMenuItem($('aside.customer-care ul.cc-icons li.active > a'));
    e.preventDefault();
});

// Toggle the customer care floating menu

/*$('aside.customer-care ul.cc-icons li a').bind('keydown', function(e) {
    if (e.keyCode == 13) {
        e.preventDefault();
    }

});*/

$('aside.customer-care ul.cc-icons li a').bind('click', function(e) {
    e.preventDefault();

    var active = $(this).parent('li').hasClass('active');
    var id = $(this).parent('li').data('id');

    if (active && breakpoint2 != 'xs') {
        closeActiveMenuItem($(this));
        return;
    }

    // Open the selected element
    if (!active) {
        
        closeActiveMenuItem($(this));
        $('aside.customer-care ul').addClass('active');
        $('aside.customer-care ul li[data-id="' + id + '"]').addClass('active');
        $('aside.customer-care ul.cc-content li[data-id="'+ id + '"]').css("display", "block").attr("aria-hidden", false).find("div.cc-body").animate({
            left: "-300px"
        }, focusTimeout, function() {
            if(isMobile || isAsideDocked)return;
            $(this).find('input:not([disabled]),a[href],area[href],iframe,button:not([disabled]),[tabindex]:not([tabindex="-1"])').first().focus();
        });       
        $(this).attr('aria-expanded', 'true');

        if (!$('aside.customer-care').hasClass('floating')) {
            $('aside.customer-care .scrollable').scrollTop(0);
        }
    }

    e.preventDefault();
    return false;
}).bind("keydown",function(e){
    const id = $(this).parent('li').data('id');
    const openedSideMenu =$('aside.customer-care ul.cc-content li[data-id="'+ id + '"]');
    const focusableElements = openedSideMenu.find(('input:not([disabled]),a[href],area[href],iframe,button:not([disabled]),[tabindex]:not([tabindex="-1"])'));
    const firstFocusableElement = focusableElements.first();
    const lastFocusableElement = focusableElements.last();

    if(isMobile || isAsideDocked){
        const $menuItems = $("aside.customer-care ul.cc-icons li");
        let currentIndex = $menuItems.index($menuItems.filter(".active"));

        function updateActive(index) {
            currentIndex = index;
            const activeMenuItem = $menuItems.eq(index);
            const activeMenuItemButton = activeMenuItem.find("a:first-of-type");
            $menuItems.removeClass("active");
            activeMenuItemButton[0].click();
            activeMenuItem.addClass("active");
            activeMenuItem.attr("aria-hidden",false);
            activeMenuItemButton.focus();
        }
        switch(e.key){
            case "Tab":
                e.preventDefault();
                firstFocusableElement.focus();
                break;
            case "ArrowRight":
                e.preventDefault();
                const nextIndex = (currentIndex + 1) % $menuItems.length;
                updateActive((nextIndex));
                break;
            case "ArrowLeft":
                e.preventDefault();
                const prevIndex = (currentIndex - 1 + $menuItems.length) % $menuItems.length;
                updateActive((prevIndex));
                break;
            default:
                break;
        }
    }

    openedSideMenu.on("keydown",function(e){
            if(e.key === "Escape"){
                if(isMobile || isAsideDocked) $("aside.customer-care a.close-menu").click();
                $(this).find(".close-sidemenu").click();
                e.preventDefault();
            }
            if (e.key === "Tab" && !e.shiftKey && lastFocusableElement.is(document.activeElement)) {
                firstFocusableElement.focus();
                e.preventDefault();
            }
    })
})

function closeActiveMenuItem($menuItem){

    $menuItem.attr('aria-expanded', 'false');
    if(isMobile){
        $('aside.customer-care ul.cc-content li.active').attr('aria-hidden', true).find("div.cc-body").css("left", "80").closest("li").css("display", "none");
    }
    else{
        $('aside.customer-care ul.cc-content li.active').attr('aria-hidden', true).find("div.cc-body").animate({
            left: "80px"
        }, focusTimeout, function(){            
            $menuItem.focus();
            $(this).closest("li").css("display", "none");
        });
    }
    
    
    $('aside.customer-care ul li.active').removeClass('active');
    $('aside.customer-care ul').removeClass('active');
}

$('body').bind('click', function() {
    if ($('aside.customer-care').hasClass('floating')) {
        closeActiveMenuItem($('aside.customer-care ul.cc-icons li.active > a'));
    }
});

$('aside.customer-care').bind('click', function(e) {
    e.stopPropagation();
});

// Open aside mobile
function openCC(id) {
    $('aside.customer-care').addClass('opened');
    $('html').css('overflow', 'hidden');

    $('aside.customer-care ul li.active').removeClass('active');
    $('aside.customer-care ul li[data-id="' + id + '"]').addClass('active').each(function(){
    	if(!$(this).parent().hasClass('cc-icons')){
    		$(this).css("display", "block");
    	}
    });
   setTimeout(()=>{
       $('aside.customer-care ul.cc-icons li[data-id="' + id + '"] a').focus();
       $('aside.customer-care ul.cc-content li[data-id="' + id + '"]').attr("aria-hidden",false)
   },500)
}

// Close aside mobile
$('aside.customer-care a.close-menu').bind('click', function(e) {
    e.preventDefault();
    $(this).blur();

    $('aside.customer-care ul.cc-content li.active').closest("li").css("display", "none");
    
    $('aside.customer-care').removeClass('opened');
    //enable inert aside when close-menu is pressed
    $('aside.customer-care').attr("inert",true);
    $('html').css('overflow', '');
});

// Dock the customer care
function dockCC() {
    if (breakpoint2 != 'xs') {
        return;
    }

    var $cc = $('.cc-mobile');

    if ($cc.hasClass('cc-homepage') && !$cc.hasClass('auto-docking')) {
        if (!$cc.hasClass('docked') && (currentScroll > 0)) {
            $cc.addClass('docked');

            timeoutStartRotate = setTimeout(startRotateCC, 500);
        } else if ($cc.hasClass('docked') && (currentScroll <= 0) && ($(window).height() >= 600 || $(window).width() <= 959)) {
            $cc.removeClass('docked');

            if($cc.hasClass('fixed')){
                $cc.removeClass('fixed')
            }
            stopRotateCC();
        }

        if (!$cc.hasClass('fixed')
                && (currentScroll > firstpage_height - sidemenu_icon_height)) {
            $cc.addClass('fixed');
        } else if ($cc.hasClass('fixed')
                && (currentScroll <= firstpage_height - sidemenu_icon_height)) {
            $cc.removeClass('fixed');
        }
    }

    if ($cc.hasClass('fixed')) {
        var height = $(".header-navigation").height() + 10;
        $cc.css("top", height + "px");
    } else {
        $cc.css("top", "");
    }
}

// Start rotate Customer care icons
function startRotateCC() {
    timeoutRotateTrasition = setTimeout(function() {
        $('.cc-mobile.docked ul.cc-icons li').addClass('transition rotate');
        $('.cc-mobile.docked ul.cc-icons li:first-child').addClass('visible');
    }, 100);

    timeoutRotate = setInterval(function() {
        var oldIcon = $('.cc-mobile.docked ul.cc-icons li').index(
                $('.cc-mobile.docked ul.cc-icons li.visible'));
        var newIcon = $('.cc-mobile.docked ul.cc-icons li').index(
                $('.cc-mobile.docked ul.cc-icons li.visible').next());

        if (newIcon < 0) {
            newIcon = 0;
        }

        $('.cc-mobile.docked ul.cc-icons li').eq(oldIcon)
                .removeClass('visible');
        $('.cc-mobile.docked ul.cc-icons li').eq(newIcon).addClass('visible');
    }, 2500);
}

// Stop rotate Customer care icons
function stopRotateCC() {
    if (typeof timeoutStartRotate != 'undefined') {
        clearTimeout(timeoutStartRotate);
    }

    if (typeof timeoutRotate != 'undefined') {
        clearTimeout(timeoutRotate);
    }

    if (typeof timeoutRotateTrasition != 'undefined') {
        clearTimeout(timeoutRotateTrasition);
    }

    $('.cc-mobile ul.cc-icons li').removeClass('rotate visible transition');
}

function adjustSideMenuHeight() {
    listElements = $('.sm_side_personal_menu > aside > ul > li');
    sectionHeight = listElements.height();
    sectionSize = listElements.length;
    $('.cc-body').css('min-height', sectionHeight * sectionSize);

    let maxHeight = 0;
    listElements.each(function(){
        if($(this).height() > maxHeight){
            maxHeight = $(this).height();
        }
    });

    listElements.each(function(){
        if(isMobile){
            $(this).css({
                'height' : 90,
                'max-height': 90
            })
            return;
        }
        $(this).css({
            'height' : maxHeight,
            'max-height': maxHeight
        })
    })
}

function displayCC() {
    if($('.cc-mobile').hasClass('hidden')) {
        $('.cc-mobile').removeClass('hidden');
    }
}

function inertAsideMenu(){
    if(isAsideDocked){
        $('aside.customer-care').attr("inert",true);
    }
}


$(document).ready(function (){

    $('.customer-care ul[role="menu"] li a[aria-expanded="false"]').on("click", function (){
        analyticsOnclickSideMenuContact($(this));
    });

    $('.cc-mobile-wrapper ul[role="menu"] li a').on("click", function() {
        analyticsOnclickSideMenuContact($(this));
    });

});

function analyticsOnclickSideMenuContact(thisObj) {

    if (typeof utag != "undefined" && typeof utag.link != "undefined" && typeof utag.link == "function") {
        var action = {
            "trackType": "ACTION-FLOATING-MENU-CLICK",
            "action_name": "floating menu click",
            "action_type": "click",
            "action_player": "async action",
            "floating_menu_text": thisObj[0].children[1].innerText.replace("\n", " ")
        };

        utag.link(action);
        //for testing the 'action' variable
        console.log(action);
    }
}

/*
 * This function retrieves currency info from a determined (hardcoded) web
 * service. Also has a test mode. If the test mode is activated, a static
 * hardcoded json is returned.
 *
 * Parameters:
 *
 * activateTestData: if is true, a static json for test propoused
 * is returned.
 *
 * EntityCode: webservice parameter it refer to the country in ISO
 * notation.
 *
 * Language: webservice parameter it refer to the language in 2-char
 * ISO notation.
 *
 * onSuccessCallback: a function that receive the currency json data.
 *
 * Returns: A json value with the currency info
 * from the webservice.
 */
(function($){

	$.fn.exists = function(){
		return this.length > 0;
	};

	$.fn.getCurrencyInfo = function(activateTestData, EntityCode, Language, onSuccessCallback) {
		if (activateTestData === true){
			onSuccessCallback([{"AmountUnits":"1","BidRate":"0.00000000","CardsMiddleRate":"2.78310000","CardsPurchaseRate":"2.67131700","CardsSaleRate":"2.92294000","CashMiddleRate":"2.78310000","CashPurchaseRate":"2.69000000","CashSaleRate":"2.90000000","CorporateMiddleRate":"0.00000000","CorporatePurchaseRate":"0.00000000","CorporateSaleRate":"0.00000000","CurrencyCode":"AAA","CurrencyName":"INVENTED CURRENCY","ExchangeRateUpdatedTimestamp":"2015-09-16T08:58:47.000+02:00","MiddleRate":"2.78310000","MidRate":"0.00000000","NationalBankPurchaseRate":"0.00000000","NationalBankSaleRate":"0.00000000","NotesMiddleRate":"0.00000000","NotesPurchaseRate":"0.00000000","NotesSaleRate":"0.00000000","OfferRate":"0.00000000","PurchaseRate":"2.69827600","SaleRate":"2.89400600","SpareMiddleRate":"0.00000000","SparePurchaseRate":"0.00000000","SpareSaleRate":"0.00000000","SpotRate":"0.00000000"}]);
		} else{
			var date = getCurrentDate();

			$.ajax({
				url : "/cwa/GetExchangeRates",
				type : 'POST',
				beforeSend : function(xhr) {
					xhr.setRequestHeader('EntityCode', EntityCode);
					xhr.setRequestHeader('UserID', '');
					xhr.setRequestHeader('Language', Language);
					xhr.setRequestHeader('SourceSystem', 'PWS');
					xhr.setRequestHeader('Product', 'PWS');
				},
				contentType : 'application/json',
				data : "{'Currency':'*ALL','DateFrom':'" + date + "','DateTo':'" + date + "'}",
				processData : false,
				success : function(data, status, xhr) {
					console.log("Succeded on retrieving currency data.");
					var ct = xhr.getResponseHeader("content-type") || "";
					if (ct.indexOf('json') != -1) {
						if ('status' in data || data == null) {
							console.log("No currency data returned.");
						} else {
							if ($.isFunction(onSuccessCallback)) {
								var order = [];
								var filteredData = data.filter(function(rate) {
									var currencyCode = rate.CurrencyCode;
									var index = order.findIndex(function(element) {
										return element === currencyCode;
									});
									if(index === -1) {
										order.push(currencyCode);
										return rate;
									}
								});
								onSuccessCallback(filteredData);
							}
						}
					} else {
						console.log("No currency data returned.");
					}
				},
				error : function(data) {
					console.log("Failure retrieving currency data.");
					console.log(data);
				}
			});
		}
	}

	/*
	 * This function help to do a call to servlet. Can be used as callback
	 * function for the previous function
	 * 
	 * Parameters:
	 * 
	 * servletUrl: url to the servlet.
	 * 
	 * data: the json data to send to the servlet.
	 */
	$.fn.callToUpdateServlet = function(servletUrl, data, typeUI, entityCode) {
		if(typeUI) {
			$.post(servletUrl, {
				"json" : JSON.stringify(data),
				"typeUI" : typeUI,
				"entityCode": entityCode
			}, "html");
		} else {
			$.post(servletUrl, {
				"json" : JSON.stringify(data)
			}, "html");
		}

	}
})(jQuery);
